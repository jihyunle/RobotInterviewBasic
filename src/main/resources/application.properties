cloud.name=
cloud.secret=
cloud.key=

server.port=8080

# H2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.jpa.hibernate.ddl-auto=create
#spring.datasource.url=jdbc:h2:mem:testdb

# MYSQL
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/test
spring.datasource.username=root
spring.datasource.password=password
useSSL=false
spring.jpa.show-sql=true
spring.devtools.restart.enabled=true


# POSTGRES
#spring.datasource.platform=postgres
#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#spring.jpa..hibernate.ddl-auto=update
#spring.jpa.show-sql=false
#spring.jpa.generate-ddl=true

#AYAL'S POSTGRES METHOD
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://localhost:5432/test
#spring.datasource.username=root
#spring.datasource.password=password
#spring.jpa.hibernate.ddl-auto=update


# initial commit to Heroku always runs with "create",
# open app on Heroku, so that the db is created,
# then come back to replace the word with "update"
# and push to Heroku again